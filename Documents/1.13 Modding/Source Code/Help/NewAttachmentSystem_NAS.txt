This is just a collection of notes about the NAS source.

 - Attaching or detaching should be done only with RemoveAttachment and AttachObject. Using insert will screw things up.
 - Attachment lists can now contain null objects. (possible memory leak if I handled this wrong?) This is to keep the attachments indexes in the list static.
 - Any time an attachment could become invalid on an item, you should use RemoveProhibitedAttachments on it. This should take care of everything.
 - I could not get the game to load old maps without errors, so I had it check every item that is added to the game with RemoveProhibitedAttachments, because this also inits any old items.
   As an added bonus this will allow people to change the xml without starting a new game.
 - Most of my changes should be commented with //WarmSteel - 

NAS 0.7
 - The way valid attachments slots is determined has been drastically altered.  The code now handles this for you, using the new nasAttachmentClass and nasLayoutClass fields of Items.xml.  
 - Attachment lists should no longer contrain null objects.  Pretty much any time you add/remove an attachment, the code uses RemoveProhibitedAtachments to revalidate all attachments, which includes adjusting their position in the OBJECTTYPE should the order of attachment slots have changed.
 - Both nasAttachmentClass and nasLayoutClass are bitwise values just like usItemClass.  This allows modders to create attachment slots that can hold multiple types of attachments, and/or use multiple slot layouts for weapons and attachments.
 - We've done away with AlteringAttachments.xml.  All attachments can now work just like underslung grenade launchers used to work.  If an attachment can have attachments (like a grenade can attach directly to a UGL that isn't, itself, attached to a weapon), it'll pass those possible attachments on to any weapon.  So, for example, if you setup the ACOG so that a Reflex Sight can attach to it, then by attaching the ACOG to a weapon, that weapon gains the ability to use the Reflex Sight.
 - We've done away with ItemSlotAssign.xml since the code handles slot assignments based on Attachments.xml and Launchables.xml.
 - We've done away with NASIncompatibleAttachments.xml.  We simply use the existing IncompatibleAttachments.xml list and have an added field in Attachments.xml to setup certain attachment combinations as only being valid in NAS.
